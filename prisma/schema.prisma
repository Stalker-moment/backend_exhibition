// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id        String   @id @default(uuid()) // Using UUID for a standard GUID
  email     String   @unique
  password  String
  role      String   @default("user")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  contact   Contact?
}

model Contact {
  id        String   @id @default(uuid()) // Assuming UUID for a unique identifier
  firstName String
  lastName  String
  email     String   @unique
  phone     String
  noReg     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  picture   String  @default("/default.png")
  account   Account  @relation(fields: [id], references: [id])
}

model Logs {
  id          Int      @id @default(autoincrement()) // Integer ID with auto-increment
  timestamp   DateTime @default(now())
  description String?
}


model Configuration {
  id               Int      @id @default(autoincrement())
  AutoButton       Boolean
  FaultResetButton Boolean
  StopButton       Boolean
  MasterOnButton   Boolean
  updatedAt        DateTime @updatedAt
}

model Sensor {
  id        Int      @id @default(autoincrement()) // Integer ID with auto-increment
  timestamp DateTime @default(now())
  Current   Float
  Pressure  Float
  updateAt  DateTime @updatedAt
}

model SensorLog {
  id        Int      @id @default(autoincrement()) // Integer ID with auto-increment
  timestamp DateTime @default(now())
  Current   Float
  Pressure  Float
  updateAt  DateTime @updatedAt
}

model DataPlc {
  id            Int      @id @default(autoincrement()) // Integer ID with auto-increment
  Power         Boolean
  DownTime      Boolean
  Air           Boolean
  MachiningComp Boolean
  L40Parts      Boolean
  L30Parts      Boolean
  PLCRun        Boolean
  MasterOn      Boolean
  updatedAt     DateTime @updatedAt
}

model oeeConfig {
  id                Int      @id //Integer ID custom for OEE/cycle
  idNow             Int
  targetProduction  Int
  targetCycleTimeOK Int
  targetCycleTimeNG Int
  onDownTime        Boolean
  maxCurrent        Float @default(5.0)
  maxPressure       Float @default(4.0)
  updatedAt         DateTime @updatedAt
}

model oeeProcess {
  id          Int      @id @default(autoincrement())
  idNow       Int
  process     Int
  isOK        Boolean?
  target      Int
  startTime   DateTime
  endTime     DateTime?
  processTime Int?
  updatedAt   DateTime @updatedAt
}

model DownTime {
  id          Int       @id @default(autoincrement()) // Integer ID with auto-increment
  idNow       Int
  timeStart   DateTime  @default(now())
  timeEnd     DateTime?
  timeDown    Int?
  timeDownStr String?
  description String?
}
